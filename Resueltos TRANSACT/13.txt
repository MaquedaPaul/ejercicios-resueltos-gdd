/*
13. Cree el/los objetos de base de datos necesarios para implantar la siguiente regla
“Ningún jefe puede tener un salario mayor al 20% de las suma de los salarios de
sus empleados totales (directos + indirectos)”. Se sabe que en la actualidad dicha
regla se cumple y que la base de datos es accedida por n aplicaciones de
diferentes tipos y tecnologías
*/



CREATE TRIGGER ej13 ON Empleado AFTER INSERT, UPDATE
AS
BEGIN
	IF (SELECT COUNT(*) FROM inserted 
	WHERE empl_salario > dbo.sumaSalariosEmpleados(empl_codigo)*0.2) > 0 
	ROLLBACK
	--ALTERNATIVA
	/*
	IF EXISTS
	(SELECT * FROM inserted 
	 WHERE empl_salario > dbo.sumaSalariosEmpleados(empl_codigo)*0.2)
	 ROLLBACK
	*/

END


CREATE FUNCTION sumaSalariosEmpleados(@jefe NUMERIC(6,0))
RETURNS DECIMAL(12,2)
BEGIN 
	DECLARE @empleado NUMERIC(6),@salarios DECIMAL(12,2)
	SELECT @salarios = ISNULL(SUM(empl_salario),0) FROM Empleado WHERE empl_jefe = @jefe
	DECLARE c1 CURSOR FOR SELECT empl_codigo FROM Empleado WHERE empl_jefe = @jefe
	OPEN c1
	FETCH NEXT INTO @empleado
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @salarios = @salarios + dbo.ej11(@empleado)
		FETCH NEXT INTO @empleado
	END
	CLOSE c1
	DEALLOCATE c1
	RETURN @salarios
END



--SOLUCION PROFE (ALTERNATIVA NO RECOMENDADA) (NO ESTÁ COMPLETA)


CREATE TRIGGER ej13 ON Empleado INSTEAD OF INSERT, UPDATE
AS
BEGIN
	IF(SELECT COUNT(*) FROM DELETED) = 0
		INSERT Empleado (SELECT * FROM inserted WHERE empl_salario = dbo.sumaSalariosEmpleados(empl_codigo)*0.2)
	ELSE
		DECLARE @codigo NUMERIC(6), @apellido CHAR(30) -- .....
		DECLARE	c1 CURSOR FOR SELECT * FROM inserted i JOIN deleted d ON 
		i.empl_codigo = d.empl_codigo 
		WHERE i.empl_salario <= dbo.sumaSalariosEmpleados(i.empl_codigo)*0.2
	
		OPEN c1
		FETCH NEXT FROM c1 INTO -- ......
		WHILE @@FETCH_STATUS = 0
		BEGIN
			UPDATE Empleado SET empl_jefe = @jefe, empl_nombre = @nombre, empl_apellido = @apellido
			WHERE @codigo = empl_codigo
		END
		CLOSE c1
		DEALLOCATE c1	

END