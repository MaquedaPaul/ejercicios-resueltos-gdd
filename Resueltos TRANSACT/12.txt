/*
12. Cree el/los objetos de base de datos necesarios para que nunca un producto
pueda ser compuesto por sí mismo. Se sabe que en la actualidad dicha regla se
cumple y que la base de datos es accedida por n aplicaciones de diferentes tipos
y tecnologías. No se conoce la cantidad de niveles de composición existentes.
*/


CREATE TRIGGER ej12
ON Composicion
INSTEAD OF INSERT
AS
BEGIN
	DECLARE @producto CHAR(8)
	DECLARE @cantidad INT
	DECLARE c1 CURSOR FOR 
	SELECT comp_producto FROM inserted
	OPEN c1
	FETCH NEXT INTO @producto
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @cantidad = @cantidad + dbo.ej12function(@producto, @producto)
		FETCH NEXT INTO @producto
	END
	CLOSE c1
	DEALLOCATE c1
	IF @cantidad > 1
	BEGIN
		PRINT 'Hay un producto que está en una composición 2 veces'
	END
	ELSE
		INSERT INTO Composicion
		SELECT * FROM inserted
	END

END


CREATE FUNCTION ej12function (@codigo CHAR(8), @productoOrigen CHAR(8))
RETURNS INT
BEGIN
	DECLARE @cantidad INT
	DECLARE @componente CHAR(8)
	IF @codigo = @productoOrigen
	BEGIN
		SET @cantidad = @cantidad +1
	END
	ELSE
	BEGIN
	SET @cantidad = (SELECT COUNT(*) FROM Composicion
			WHERE comp_producto = @productoOrigen)
	END
	DECLARE c1 CURSOR FOR SELECT comp_componente FROM Composicion
	WHERE comp_producto = @codigo
	OPEN c1
		FETCH NEXT INTO @componente
		WHILE @@FETCH_STATUS = 0
		BEGIN	

		SET @cantidad = dbo.ej12function(@componente, @productoOrigen)
		FETCH NEXT INTO @componente
		END
	CLOSE c1
	DEALLOCATE c1


	RETURN @cantidad
END


--SOLUCIÓN PROFE

CREATE TRIGGER ej12 ON Composicion AFTER INSERT, UPDATE
AS
BEGIN
	IF(SELECT COUNT(*) FROM inserted 
	WHERE dbo.compuestopor(comp_producto, comp_componente)=1) > 0
	ROLLBACK

END


CREATE FUNCTION compuestopor(@producto CHAR(8), @componente CHAR(8))
RETURNS INT
AS
BEGIN
	IF @producto = @componente
		RETURN 1
	DECLARE @compo CHAR(8)
	DECLARE c1 CURSOR FOR 
	SELECT comp_componente FROM Composicion WHERE comp_producto = @componente
	OPEN c1
		FETCH NEXT c1 INTO @compo
		WHILE @@FETCH_STATUS = 0
		BEGIN
			IF dbo.compuestopor(@producto, @compo) = 1
			BEGIN
				RETURN 1
			END

			FETCH NEXT c1 INTO @compo
		END
	CLOSE c1
	DEALLOCATE c1
	RETURN 0
END



